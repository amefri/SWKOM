version: '3.8'

services:
  db:
    image: docker.io/library/postgres:16.4-alpine
    container_name: paperless-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: paperlessdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paperlessdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  rest:
    build: rest-api
    container_name: rest
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/paperlessdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3

  ui:
    build: ./ui
    container_name: frontend
    restart: unless-stopped
    ports:
      - "8080:80"
      - "9090:9090"
    depends_on:
      - rest
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "9093:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9090"
    networks:
      - app-network

  workers:
    build:
      dockerfile: workers/Dockerfile
    container_name: workers
    restart: unless-stopped
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
      MINIO_HOST: localhost:9000
    depends_on:
      - rabbitmq
    networks:
      - app-network
      
  adminer:
    image: docker.io/library/adminer
    depends_on:
      - postgres-db
    ports:
      - "9091:8080"
    networks:
      - app-network


volumes:
  postgres_data:
  minio_data:
    driver: local

networks:
  app-network:
    driver: bridge
